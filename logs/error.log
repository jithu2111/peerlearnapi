{"level":"error","message":"Error inserting user: insert into \"users\" (\"email\", \"name\", \"password\", \"role\") values ($1, $2, $3, $4) returning \"userid\", \"name\", \"email\", \"role\" - new row for relation \"users\" violates check constraint \"users_role_check\"","timestamp":"2025-03-27T22:51:45.444Z"}
{"level":"error","message":"Error inserting user: TypeError: Cannot read properties of undefined (reading 'status')","timestamp":"2025-03-27T22:52:41.419Z"}
{"level":"error","message":"Error inserting user: error: insert into \"users\" (\"email\", \"isdeleted\", \"name\", \"password\", \"role\") values ($1, $2, $3, $4, $5) returning \"userid\", \"name\", \"email\", \"role\" - duplicate key value violates unique constraint \"users_email_key\"","timestamp":"2025-03-27T22:55:44.914Z"}
{"level":"error","message":"Error inserting user: insert into \"users\" (\"email\", \"isdeleted\", \"name\", \"password\", \"role\") values ($1, $2, $3, $4, $5) returning \"userid\", \"name\", \"email\", \"role\" - duplicate key value violates unique constraint \"users_email_key\"","timestamp":"2025-03-27T22:56:14.378Z"}
{"level":"error","message":"Error inserting user: error: insert into \"users\" (\"email\", \"isdeleted\", \"name\", \"password\", \"role\") values ($1, $2, $3, $4, $5) returning \"userid\", \"name\", \"email\", \"role\" - duplicate key value violates unique constraint \"users_email_key\"","timestamp":"2025-03-27T22:56:36.675Z"}
{"level":"error","message":"Error inserting user: TypeError: Cannot read properties of undefined (reading 'status')","timestamp":"2025-03-27T22:57:28.599Z"}
{"level":"error","message":"Error inserting user: TypeError: Cannot read properties of undefined (reading 'status')","timestamp":"2025-03-27T22:59:27.838Z"}
{"level":"error","message":"Error inserting user: Cannot read properties of undefined (reading 'status')","timestamp":"2025-03-27T23:04:12.306Z"}
{"level":"error","message":"Error inserting user: insert into \"users\" (\"email\", \"isdeleted\", \"name\", \"password\", \"role\") values ($1, $2, $3, $4, $5) returning \"userid\", \"name\", \"email\", \"role\" - duplicate key value violates unique constraint \"users_email_key\"","timestamp":"2025-03-27T23:06:58.980Z"}
{"level":"error","message":"Error inserting user: insert into \"users\" (\"email\", \"isdeleted\", \"name\", \"password\", \"role\") values ($1, $2, $3, $4, $5) returning \"userid\", \"name\", \"email\", \"role\" - duplicate key value violates unique constraint \"users_email_key\"","timestamp":"2025-03-27T23:07:24.588Z"}
{"level":"error","message":"Error inserting user: insert into \"users\" (\"email\", \"isdeleted\", \"name\", \"password\", \"role\") values ($1, $2, $3, $4, $5) returning \"userid\", \"name\", \"email\", \"role\" - duplicate key value violates unique constraint \"users_email_key\"","timestamp":"2025-03-27T23:10:06.085Z"}
{"level":"error","message":"Error inserting course: select \"userid\", \"name\", \"email\", \"role\" from \"users\" where \"userid\" = $1 and \"isDeleted\" = $2 limit $3 - column \"isDeleted\" does not exist","timestamp":"2025-03-27T23:14:47.230Z"}
{"level":"error","message":"Error inserting course: select \"userid\", \"name\", \"email\", \"role\" from \"users\" where \"userid\" = $1 and \"isDeleted\" = $2 limit $3 - column \"isDeleted\" does not exist","timestamp":"2025-03-27T23:15:03.224Z"}
{"level":"error","message":"Error inserting assignment: Undefined binding(s) detected when compiling FIRST. Undefined column(s): [courseid] query: select \"courseid\", \"coursename\", \"instructorid\", \"startdate\", \"enddate\", \"isarchived\" from \"courses\" where \"isdeleted\" = ? and \"courseid\" = ? order by \"startdate\" desc limit ?","timestamp":"2025-03-27T23:20:18.612Z"}
{"level":"error","message":"Error inserting assignment: Undefined binding(s) detected when compiling FIRST. Undefined column(s): [courseid] query: select \"courseid\", \"coursename\", \"instructorid\", \"startdate\", \"enddate\", \"isarchived\" from \"courses\" where \"isdeleted\" = ? and \"courseid\" = ? order by \"startdate\" desc limit ?","timestamp":"2025-03-27T23:21:03.567Z"}
{"level":"error","message":"Error inserting assignment: req is not defined","timestamp":"2025-03-27T23:22:15.386Z"}
{"level":"error","message":"Error inserting assignment: insert into \"assignments\" (\"courseid\", \"deadline\", \"description\", \"isdeleted\", \"maxscore\", \"title\", \"weightage\") values ($1, $2, $3, $4, DEFAULT, $5, $6) returning \"assignid\", \"courseid\", \"title\", \"description\", \"deadline\", \"maxscore\", \"weightage\" - null value in column \"maxscore\" of relation \"assignments\" violates not-null constraint","timestamp":"2025-03-27T23:25:17.709Z"}
{"level":"error","message":"Error fetching user by email undefined: Undefined binding(s) detected when compiling FIRST. Undefined column(s): [email] query: select * from \"users\" where \"email\" = ? and \"isdeleted\" = ? limit ?","timestamp":"2025-03-28T15:09:30.042Z"}
{"level":"error","message":"Error fetching user by email undefined: Undefined binding(s) detected when compiling FIRST. Undefined column(s): [email] query: select * from \"users\" where \"email\" = ? and \"isdeleted\" = ? limit ?","timestamp":"2025-03-28T15:14:39.489Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: student, grader, instructor.","timestamp":"2025-03-28T15:25:03.929Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: student, grader, instructor.","timestamp":"2025-03-28T15:26:09.636Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: student, grader, instructor.","timestamp":"2025-03-28T15:26:29.084Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: student, grader, instructor.","timestamp":"2025-03-28T15:50:13.476Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: student, grader, instructor.","timestamp":"2025-03-28T15:53:43.990Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: Student, Grader, Instructor.","timestamp":"2025-03-28T15:54:51.796Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: Student, Grader, Instructor.","timestamp":"2025-03-28T15:56:48.597Z"}
{"level":"error","message":"Error inserting enrollment: Cannot read properties of undefined (reading 'id')","timestamp":"2025-03-29T15:26:51.086Z"}
{"level":"error","message":"Error inserting enrollment: Cannot read properties of undefined (reading 'id')","timestamp":"2025-03-29T15:40:24.449Z"}
{"level":"error","message":"Error fetching user by ID 2: Cannot read properties of undefined (reading 'id')","timestamp":"2025-03-29T17:01:57.895Z"}
{"level":"error","message":"Error fetching user by ID 2: Cannot read properties of undefined (reading 'id')","timestamp":"2025-03-29T17:02:37.071Z"}
{"level":"error","message":"Error fetching user by ID 14: Cannot read properties of undefined (reading 'id')","timestamp":"2025-03-29T17:02:48.482Z"}
{"level":"error","message":"Error fetching user by email smadhira1@student.gsu.edu: getaddrinfo ENOTFOUND db.txunrdefwgxgkhndfeaq.supabase.co","timestamp":"2025-04-01T19:20:43.964Z"}
{"level":"error","message":"Error fetching user by email smadhira1@student.gsu.edu: getaddrinfo ENOTFOUND db.txunrdefwgxgkhndfeaq.supabase.co","timestamp":"2025-04-01T19:21:09.647Z"}
{"level":"error","message":"Error fetching user by email saketh@student.gsu.edu: getaddrinfo ENOTFOUND db.txunrdefwgxgkhndfeaq.supabase.co","timestamp":"2025-04-01T19:21:51.727Z"}
{"level":"error","message":"Error fetching user by email murali@student.gsu.edu: getaddrinfo ENOTFOUND db.txunrdefwgxgkhndfeaq.supabase.co","timestamp":"2025-04-01T19:25:49.756Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: Student, Grader, Instructor.","timestamp":"2025-04-17T03:05:24.157Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: Student, Grader, Instructor.","timestamp":"2025-04-17T03:10:02.158Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: Student, Grader, Instructor.","timestamp":"2025-04-17T03:14:26.877Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: Student, Grader, Instructor.","timestamp":"2025-04-17T03:19:04.265Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: Student, Grader, Instructor.","timestamp":"2025-04-17T03:20:52.015Z"}
{"level":"error","message":"Error inserting user: Invalid role. Valid roles are: Student, Grader, Instructor.","timestamp":"2025-04-17T03:22:18.808Z"}
{"level":"error","message":"Error fetching course by ID 3: fetch.fetchCourseById is not a function","timestamp":"2025-04-19T19:22:59.420Z"}
{"level":"error","message":"Error fetching course by ID 3: fetch.fetchCourseById is not a function","timestamp":"2025-04-19T19:22:59.424Z"}
{"level":"error","message":"Error fetching course by ID 3: fetch.fetchCourseById is not a function","timestamp":"2025-04-19T23:22:26.367Z"}
{"level":"error","message":"Error fetching course by ID 3: fetch.fetchCourseById is not a function","timestamp":"2025-04-19T23:22:26.372Z"}
{"level":"error","message":"Error fetching course by ID 3: fetch.fetchCourseById is not a function","timestamp":"2025-04-19T23:35:34.352Z"}
{"level":"error","message":"Error fetching course by ID 3: fetch.fetchCourseById is not a function","timestamp":"2025-04-19T23:35:34.356Z"}
{"level":"error","message":"Error fetching course by ID 3: fetch.fetchCourseById is not a function","timestamp":"2025-04-19T23:54:06.597Z"}
{"level":"error","message":"Error fetching course by ID 3: fetch.fetchCourseById is not a function","timestamp":"2025-04-19T23:54:06.602Z"}
{"level":"error","message":"Error fetching course by ID 3: fetch.fetchCourseById is not a function","timestamp":"2025-04-19T23:55:30.208Z"}
{"level":"error","message":"Error fetching course by ID 1: fetch.fetchCourseById is not a function","timestamp":"2025-04-19T23:56:38.496Z"}
{"level":"error","message":"Error fetching course by ID 3: fetch.fetchCourseById is not a function","timestamp":"2025-04-19T23:56:52.978Z"}
{"level":"error","message":"Error fetching course by ID DBMS: select \"courseid\", \"coursename\", \"startdate\", \"enddate\", \"isarchived\" from \"courses\" where \"courseid\" = $1 and \"isdeleted\" = $2 limit $3 - invalid input syntax for type integer: \"DBMS\"","timestamp":"2025-04-20T20:02:18.092Z"}
